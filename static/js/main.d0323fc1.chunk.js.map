{"version":3,"sources":["Components/SignIn.jsx","reducer.js","Socket.js","Components/Chat.js","App.js","index.js"],"names":["SignIn","onLogin","useState","chatId","setChatId","userName","setUserName","isLoading","setLoading","submitButton","a","alert","obj","axios","post","className","type","placeholder","value","onChange","e","target","onClick","disabled","state","action","joined","payload","users","messages","socket","io","Chat","onAddMessage","React","messageValue","setMessageValue","messagesRef","useRef","useEffect","current","scroll","scrollHeight","classForMessage","message","length","map","name","index","key","ref","text","rows","emit","App","useReducer","reducer","dispatch","get","data","setUsers","addMessage","on","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0323fc1.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport axios from 'axios'\r\n\r\n\r\nfunction SignIn({onLogin}) {\r\n\r\n    const [chatId, setChatId] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    const submitButton = async () =>{\r\n        if(!chatId || !userName)\r\n            return alert('Заполните поля');\r\n\r\n        const obj = {chatId,userName};\r\n        setLoading(true);\r\n\r\n        await axios.post('https://beautiful-crater-lake-06500.herokuapp.com/rooms', obj);\r\n        onLogin(obj);\r\n    };\r\n\r\n    return (\r\n            <div className='join-block1'>\r\n                <input type='text' placeholder='Chat ID' value={chatId} onChange={e=>setChatId(e.target.value)}/>\r\n                <input type='text' placeholder='Name' value={userName} onChange={e=>setUserName(e.target.value)}/>\r\n                <button onClick={submitButton} disabled={isLoading}\r\n                        className='btn btn-success'>{isLoading ? 'Entering...' : 'Enter'}</button>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default SignIn;\r\n","export default (state, action) => {\r\n    switch (action.type) {\r\n        case 'JOINED':\r\n            return {\r\n                ...state,\r\n                joined: true,\r\n                userName: action.payload.userName,\r\n                chatId: action.payload.chatId\r\n            };\r\n        case 'SET_USERS':\r\n            return {\r\n                ...state,\r\n                users: action.payload\r\n            };\r\n        case 'NEW_MESSAGE':\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, action.payload],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import io from 'socket.io-client';\r\n\r\nconst socket = io('https://beautiful-crater-lake-06500.herokuapp.com');\r\n\r\nexport default socket;","import React from 'react';\r\nimport socket from '../Socket';\r\nimport '../index.css'\r\n\r\nfunction Chat({users, messages, userName, chatId, onAddMessage}) {\r\n    const [messageValue, setMessageValue] = React.useState('');\r\n    const messagesRef = React.useRef(null);\r\n\r\n    const onSendMessage = () => {\r\n        socket.emit('ROOM:NEW_MESSAGE', {\r\n            userName,\r\n            chatId,\r\n            text: messageValue,\r\n        });\r\n        onAddMessage({userName, text: messageValue});\r\n        setMessageValue('');\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        messagesRef.current.scroll(0, messagesRef.current.scrollHeight);\r\n    }, [messages]);\r\n\r\n    let classForMessage = (message) =>{\r\n        if(message.userName === userName)\r\n            return 'message_my';\r\n        else\r\n            return 'message';\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat-users\">\r\n                Chat:<b>{chatId}</b>\r\n                <hr/>\r\n                <b>Users ({users.length}):</b>\r\n                <ul>\r\n                    {users.map((name, index) => (\r\n                        <li key={name + index}>{name}</li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className=\"chat-messages\">\r\n                <div ref={messagesRef} className=\"messages\">\r\n                    {messages.map(message =>\r\n                        (<div key={message.text} className={classForMessage(message)}>\r\n                            <p>{message.text}</p>\r\n                            <div>\r\n                                <span>{message.userName}</span>\r\n                            </div>\r\n                        </div>)\r\n                    )}\r\n                </div>\r\n                <form>\r\n          <textarea value={messageValue} onChange={e => {\r\n              setMessageValue(e.target.value)\r\n          }}\r\n                    className='form-control' rows='3'/>\r\n                    <button onClick={onSendMessage} type=\"button\" className=\"btn btn-primary\">\r\n                        Send\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;","import React, {useEffect, useReducer} from 'react';\r\nimport './app.css'\r\nimport SignIn from \"./Components/SignIn\";\r\nimport reducer from './reducer';\r\nimport socket from './Socket';\r\nimport Chat from \"./Components/Chat\";\r\nimport axios from 'axios';\r\n\r\n\r\nfunction App() {\r\n\r\n    const [state, dispatch] = useReducer(reducer, {\r\n        joined: false,\r\n        chatId: null,\r\n        userName: null,\r\n        users: [],\r\n        messages: []\r\n    });\r\n\r\n    const onLogin = async (obj) =>{\r\n        dispatch({\r\n            type:'JOINED',\r\n            payload: obj\r\n        });\r\n        socket.emit('ROOM:JOIN', obj);// отправляем сокет запрос на бек\r\n        const {data} = await axios.get(`https://beautiful-crater-lake-06500.herokuapp.com/rooms/${obj.chatId}`);\r\n        setUsers(data.users);\r\n    };\r\n\r\n    const setUsers = (users) => {\r\n        dispatch({\r\n            type: 'SET_USERS',\r\n            payload: users,\r\n        })\r\n    };\r\n\r\n    const addMessage = (message) =>{\r\n        dispatch({\r\n            type: 'NEW_MESSAGE',\r\n            payload: message,\r\n        })\r\n    };\r\n\r\n    useEffect(()=>{\r\n        socket.on('ROOM:SET_USERS',setUsers); // как только получаем от сервера запрос ROOM:SET_USERS выполняем setUsers\r\n        socket.on('ROOM:NEW_MESSAGE', message =>addMessage(message));\r\n    },[]);\r\n\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className='join-block'>\r\n                {!state.joined ? <SignIn onLogin={onLogin}/> : <Chat {...state} onAddMessage={addMessage}/>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}